GuessNumber
Guess Number Game

总览
	用TDD（Test Driven Development）开发一个简单的猜数字游戏，基本业务逻辑如下：

	游戏开始后，系统会随机给出一个四位，每位都不重复的数字作为答案。由用户输入自己猜测的四个数字。
	系统会将两个数字进行对比，并给形出xAxB的提示， 比如"2A1B"。
	如果数字猜对而且位置也对，就是一个A。
	如果数字猜对但位置不对，就是一个B。
	例如：

	系统给出"1234"，用户输入"1234"
	返回"4A0B"
	系统给出"1234"，用户输入"4321"
	返回"0A4B"

问题分解：
	1：随机产生一个四位数，每位都不重复。
	2：将用户输入的数字和系统产生的数字进行对比。
		数字正确位置不对为B；
		数字正确位置正确为A；
		数字位置都不对则不统计；
			即：数字正确的个数 = 位置不正确的个数 + 位置正确的个数


第一问 xAxB
	写一个CompareNumber类，只有一个函数，该函数接受两个参数，一个是答案，一个是用户输入的四位数。
	返回值是xAxB的字符串 这里我们假定答案和用户输入都是合法的四位数。不用考虑数字合法性问题。
	 请对这个类写测试（思考要写几个测试）

问题分解：
设：数字正确的个数为x，数字正确且位置正确的个数为y.
	1：数字全部正确
		1：顺序全部正确  ====>  4A0B
		2：顺序部分正确  ====>  yA(x-y)B  (x = 4)
		3：顺序全都不对  ====>  0A4B
	2：数字部分正确
		1：顺序全部正确  ====>  yA0B  
		2：顺序部分正确  ====>  yA(x-y)B  (0 < x < 4)
		3：顺序全都不对  ====>  0AxB
	3：数字全都不正确  ====>  0A0B	
		

第二问 随机数生成
	写一个AnswerGenerator类，只有一个函数，返回一个四位，每位都不重复随机数。
	连续三次产生的随机数不能相同。
	 请对这个类写测试。（思考测试哪些）

问题分解：
	1：是一个数字（Int或者可以被转换为int）
	2：有四位
	3：每一位都不重复
	4：三次之内的数字不同
	5：不连续的三次产生的数字可以相同


第三问
	写一个Game类，还是只有一个函数，但是只有一个参数。把前两问做的类集成起来，写一个集成的单元测试，写一个集成测试。

	每回游戏有六次机会。每输入一次数字就会减少一次机会并打印xAxB。
	当游戏开始时，打印“Welcome!”空一行打印 "Please input your number(6): "
	每次输入完并敲击回车，就会在下面打印出xAxB，然后空一行打印出新的"Please input your number(x): "
	当6次都没有猜中的时候，打印"Game Over"并退出
	当猜中的时候，不要打印4A0B,而是打印"Congratulations!"并退出

问题分解：
设：用户没回游戏的机会数为x；
	1：游戏开始第一行打印"Welcome!"
	2：第二行打印"Please input yoru number(6): "
	3：比对用户输入，并打印结果
		1：结果不正确
			1：x ！= 0
				第一行打印"xAxB"
				第二行打印"Please input your number(x): "
			2：x = 0
				游戏结束，打印"Game over!"
		2：结果正确
			1：x = 6
			2：1 < x < 6
			3：x = 1
				游戏结束，打印"Congratulation!"
